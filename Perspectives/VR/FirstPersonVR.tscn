[gd_scene load_steps=9 format=2]

[ext_resource path="res://Perspectives/VR/FirstPersonVR.gd" type="Script" id=1]
[ext_resource path="res://Perspectives/VR/ARVROrigin.gd" type="Script" id=2]
[ext_resource path="res://Perspectives/VR/SettingsARVRCamera.gd" type="Script" id=3]
[ext_resource path="res://addons/godot-openvr/scenes/ovr_controller.tscn" type="PackedScene" id=4]
[ext_resource path="res://VR/RayTeleport.tscn" type="PackedScene" id=5]
[ext_resource path="res://VR/OrientationCompass/Compass.tscn" type="PackedScene" id=6]
[ext_resource path="res://Perspectives/VR/ParentTracker.gd" type="Script" id=7]

[sub_resource type="GDScript" id=1]
script/source = "extends ARVRController

signal controller_activated(controller)

var ovr_render_model
var components = Array()
var ws = 0

func _ready():
	# instance our render model object
	ovr_render_model = preload(\"res://addons/godot-openvr/OpenVRRenderModel.gdns\").new()
	
	# hide to begin with
	visible = false

func apply_world_scale():
	var new_ws = ARVRServer.world_scale
	if (ws != new_ws):
		ws = new_ws
		$Controller_mesh.scale = Vector3(ws, ws, ws)

func load_controller_mesh(controller_name):
	if ovr_render_model.load_model(controller_name.substr(0, controller_name.length()-2)):
		return ovr_render_model
	
	if ovr_render_model.load_model(\"generic_controller\"):
		return ovr_render_model
	
	return Mesh.new()

func _process(delta):
	if !get_is_active():
		visible = false
		return
	
	# always set our world scale, user may end up changing this
	apply_world_scale()
	
	if visible:
		return
	
	# became active? lets handle it...
	var controller_name = get_controller_name()
	print(\"Controller \" + controller_name + \" became active\")
			
	# attempt to load a mesh for this
	$Controller_mesh.mesh = load_controller_mesh(controller_name)
			
	# make it visible
	visible = true
	emit_signal(\"controller_activated\", self)
"

[node name="FirstPersonVR" type="Spatial"]
script = ExtResource( 1 )

[node name="ARVROrigin" type="ARVROrigin" parent="."]
script = ExtResource( 2 )

[node name="SettingsARVRCamera" type="ARVRCamera" parent="ARVROrigin"]
cull_mask = 631
current = true
far = 60000.0
script = ExtResource( 3 )

[node name="ParentTracker" type="Node" parent="ARVROrigin/SettingsARVRCamera"]
script = ExtResource( 7 )

[node name="TrackingTimer" type="Timer" parent="ARVROrigin/SettingsARVRCamera/ParentTracker"]
process_mode = 0
wait_time = 0.1
autostart = true

[node name="RightHand" parent="ARVROrigin" instance=ExtResource( 4 )]
script = SubResource( 1 )

[node name="ARVRControllerExtension" parent="ARVROrigin/RightHand" instance=ExtResource( 5 )]

[node name="LeftHand" parent="ARVROrigin" instance=ExtResource( 4 )]
controller_id = 2
script = SubResource( 1 )

[node name="Compass" parent="ARVROrigin/LeftHand" instance=ExtResource( 6 )]
transform = Transform( 0.999999, 0, 0, 0, 1, 0, 0, 0, 0.999999, 0, 0, 0 )

[node name="TallRay" type="RayCast" parent="ARVROrigin"]

[editable path="ARVROrigin/RightHand/ARVRControllerExtension"]
