[gd_scene load_steps=13 format=2]

[ext_resource path="res://Perspectives/VR/FirstPersonVR.gd" type="Script" id=1]
[ext_resource path="res://Perspectives/VR/ARVROrigin.gd" type="Script" id=2]
[ext_resource path="res://Perspectives/VR/SettingsARVRCamera.gd" type="Script" id=3]
[ext_resource path="res://Perspectives/VR/FadeMesh.gd" type="Script" id=4]
[ext_resource path="res://addons/godot-openvr/scenes/ovr_controller.tscn" type="PackedScene" id=5]
[ext_resource path="res://addons/vr-common/functions/Function_Teleport.tscn" type="PackedScene" id=6]

[sub_resource type="Animation" id=1]
resource_name = "Fade"
length = 2.0

[sub_resource type="Animation" id=2]
resource_name = "FadeIn"
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("FadeMesh:material/0:albedo_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 0 ), Color( 0, 0, 0, 1 ) ]
}

[sub_resource type="Animation" id=3]
resource_name = "FadeOut"
length = 4.0
tracks/0/type = "value"
tracks/0/path = NodePath("FadeMesh:material/0:albedo_color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 3.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 0 ) ]
}

[sub_resource type="PlaneMesh" id=4]

[sub_resource type="SpatialMaterial" id=5]
flags_transparent = true
flags_unshaded = true
albedo_color = Color( 0, 0, 0, 1 )

[sub_resource type="GDScript" id=6]
script/source = "extends ARVRController

signal controller_activated(controller)

var ovr_render_model
var components = Array()
var ws = 0

func _ready():
	# instance our render model object
	ovr_render_model = preload(\"res://addons/godot-openvr/OpenVRRenderModel.gdns\").new()
	
	# hide to begin with
	visible = false

func apply_world_scale():
	var new_ws = ARVRServer.world_scale
	if (ws != new_ws):
		ws = new_ws
		$Controller_mesh.scale = Vector3(ws, ws, ws)

func load_controller_mesh(controller_name):
	if ovr_render_model.load_model(controller_name.substr(0, controller_name.length()-2)):
		return ovr_render_model
	
	if ovr_render_model.load_model(\"generic_controller\"):
		return ovr_render_model
	
	return Mesh.new()

func _process(delta):
	if !get_is_active():
		visible = false
		return
	
	# always set our world scale, user may end up changing this
	apply_world_scale()
	
	if visible:
		return
	
	# became active? lets handle it...
	var controller_name = get_controller_name()
	print(\"Controller \" + controller_name + \" became active\")
			
	# attempt to load a mesh for this
	$Controller_mesh.mesh = load_controller_mesh(controller_name)
			
	# make it visible
	visible = true
	emit_signal(\"controller_activated\", self)
"

[node name="FirstPersonVR" type="Spatial"]
script = ExtResource( 1 )

[node name="ARVROrigin" type="ARVROrigin" parent="."]
script = ExtResource( 2 )

[node name="SettingsARVRCamera" type="ARVRCamera" parent="ARVROrigin"]
cull_mask = 631
current = true
far = 20000.0
script = ExtResource( 3 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="ARVROrigin/SettingsARVRCamera"]
playback_speed = 2.0
anims/Fade = SubResource( 1 )
anims/FadeIn = SubResource( 2 )
anims/FadeOut = SubResource( 3 )
script = ExtResource( 4 )
below_threshold = 15
above_threshold = 20

[node name="FadeMesh" type="MeshInstance" parent="ARVROrigin/SettingsARVRCamera"]
transform = Transform( 5, 0, 0, 0, -2.18557e-007, -5, 0, 5, -2.18557e-007, 0, 0, -3.86861 )
layers = 512
mesh = SubResource( 4 )
material/0 = SubResource( 5 )

[node name="OVRController" parent="ARVROrigin" instance=ExtResource( 5 )]
script = SubResource( 6 )

[node name="Function_Teleport" parent="ARVROrigin/OVRController" instance=ExtResource( 6 )]
origin = NodePath("../..")
floor_threshold = 0.75

[node name="OVRController2" parent="ARVROrigin" instance=ExtResource( 5 )]
controller_id = 2
script = SubResource( 6 )
